{
	"name": "Fact_Crew_Load",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable27",
						"type": "DatasetReference"
					},
					"name": "DimTitleSource"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable28",
						"type": "DatasetReference"
					},
					"name": "DimPersonSource"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable29",
						"type": "DatasetReference"
					},
					"name": "DimPersonRoleSource"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable30",
						"type": "DatasetReference"
					},
					"name": "TitlePrincipalsSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable31",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				},
				{
					"name": "select4"
				},
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "select5"
				},
				{
					"name": "join3"
				},
				{
					"name": "select6"
				},
				{
					"name": "surrogateKey1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          TITLE_SK as string,",
				"          TCONST as string,",
				"          PRIMARY_TITLE as string,",
				"          ORIGINAL_TITLE as string,",
				"          TITLE_TYPE as string,",
				"          IS_ADULT as decimal(38,0),",
				"          START_YEAR as string,",
				"          END_YEAR as string,",
				"          RUNTIME_MINUTES as decimal(38,0),",
				"          DI_JOB_ID as decimal(38,0),",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DimTitleSource",
				"source(output(",
				"          PERSON_SK as decimal(38,0),",
				"          NCONST as string,",
				"          PRIMARYNAME as string,",
				"          BIRTHYEAR as string,",
				"          DEATHYEAR as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DimPersonSource",
				"source(output(",
				"          PERSONROLE_SK as string,",
				"          CATEGORY as string,",
				"          CHARACTERS as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DimPersonRoleSource",
				"source(output(",
				"          TCONST as string,",
				"          ORDERING as decimal(38,0),",
				"          NCONST as string,",
				"          CATEGORY as string,",
				"          JOB as string,",
				"          CHARACTERS as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> TitlePrincipalsSource",
				"DimTitleSource select(mapColumn(",
				"          TITLE_SK,",
				"          TCONST",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"DimPersonSource select(mapColumn(",
				"          PERSON_SK,",
				"          NCONST",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"DimPersonRoleSource select(mapColumn(",
				"          PERSONROLE_SK,",
				"          CATEGORY,",
				"          CHARACTERS",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"TitlePrincipalsSource select(mapColumn(",
				"          TCONST,",
				"          ORDERING,",
				"          NCONST,",
				"          CATEGORY,",
				"          CHARACTERS",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"select4, select1 join(select4@TCONST == select1@TCONST,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, DimPersonSource join(select4@NCONST == DimPersonSource@NCONST,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 select(mapColumn(",
				"          TCONST = select4@TCONST,",
				"          ORDERING,",
				"          NCONST = select4@NCONST,",
				"          CATEGORY,",
				"          CHARACTERS,",
				"          TITLE_SK,",
				"          PERSON_SK",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"select5, select3 join(select5@CATEGORY == select3@CATEGORY",
				"     && select5@CHARACTERS == select3@CHARACTERS,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3 select(mapColumn(",
				"          TITLE_SK,",
				"          PERSON_SK,",
				"          PERSONROLE_SK",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select6",
				"select6 keyGenerate(output(Crew_SK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CREW_SK as decimal(38,0),",
				"          PERSON_SK as decimal(38,0),",
				"          PERSONROLE_SK as decimal(38,0),",
				"          TITLE_SK as decimal(30,0)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          CREW_SK = Crew_SK,",
				"          PERSON_SK,",
				"          PERSONROLE_SK,",
				"          TITLE_SK",
				"     )) ~> sink1"
			]
		}
	}
}