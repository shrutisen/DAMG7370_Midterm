{
	"name": "Bridge_Profession_Person_Load",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable15",
						"type": "DatasetReference"
					},
					"name": "ProfessionSource"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable14",
						"type": "DatasetReference"
					},
					"name": "DimPersonSource"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable16",
						"type": "DatasetReference"
					},
					"name": "NameBasicsSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable17",
						"type": "DatasetReference"
					},
					"name": "ToTarget"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Job_ID as string (\"70\")",
				"}",
				"source(output(",
				"          PROFESSION_SK as string,",
				"          PROFESSION_NAME as string,",
				"          DI_JOB_ID as decimal(10,0),",
				"          DI_JOB_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> ProfessionSource",
				"source(output(",
				"          PERSON_SK as decimal(38,0),",
				"          NCONST as string,",
				"          PRIMARYNAME as string,",
				"          BIRTHYEAR as string,",
				"          DEATHYEAR as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DimPersonSource",
				"source(output(",
				"          NCONST as string,",
				"          PRIMARYNAME as string,",
				"          PRIMARYPROFESSION as string,",
				"          KNOWNFORTITLES as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as date,",
				"          BIRTHYEAR as string,",
				"          DEATHYEAR as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> NameBasicsSource",
				"NameBasicsSource select(mapColumn(",
				"          NCONST,",
				"          PRIMARYNAME,",
				"          PRIMARYPROFESSION",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"DimPersonSource select(mapColumn(",
				"          PERSON_SK,",
				"          NCONST,",
				"          PRIMARYNAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2, select1 join(select2@NCONST == select1@NCONST,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, ProfessionSource join(PRIMARYPROFESSION == PROFESSION_NAME,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 derive(DI_JOB_ID1 = $Job_ID) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PERSON_SK as decimal(38,0),",
				"          PROFESSION_SK as string,",
				"          DI_JOB_ID as string,",
				"          DI_JOB_DT as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          PERSON_SK,",
				"          PROFESSION_SK,",
				"          DI_JOB_ID = DI_JOB_ID1,",
				"          DI_JOB_DT",
				"     )) ~> ToTarget"
			]
		}
	}
}