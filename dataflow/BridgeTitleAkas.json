{
	"name": "BridgeTitleAkas",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable11",
						"type": "DatasetReference"
					},
					"name": "dimlanguage"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable12",
						"type": "DatasetReference"
					},
					"name": "dimregion"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable13",
						"type": "DatasetReference"
					},
					"name": "dimtitle"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable14",
						"type": "DatasetReference"
					},
					"name": "titleakas"
				}
			],
			"sinks": [
				{
					"name": "sinkBridgelangRegtitle"
				}
			],
			"transformations": [
				{
					"name": "join3"
				},
				{
					"name": "join4"
				},
				{
					"name": "select3"
				},
				{
					"name": "join5"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     DI_JOB_ID as string (\"34456\"),",
				"     di_load_date as date (currentDate())",
				"}",
				"source(output(",
				"          LANGUAGE_SK as string,",
				"          LANGUAGE_NAME as string,",
				"          LANGUAGE_CODE as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> dimlanguage",
				"source(output(",
				"          REGION_SK as string,",
				"          COUNTRY_NAME as string,",
				"          COUNTRY_CODE as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> dimregion",
				"source(output(",
				"          TITLE_SK as string,",
				"          TCONST as string,",
				"          PRIMARY_TITLE as string,",
				"          ORIGINAL_TITLE as string,",
				"          TITLE_TYPE as string,",
				"          IS_ADULT as decimal(38,0),",
				"          START_YEAR as string,",
				"          END_YEAR as string,",
				"          RUNTIME_MINUTES as decimal(38,0),",
				"          DI_JOB_ID as decimal(38,0),",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> dimtitle",
				"source(output(",
				"          TITLEID as string,",
				"          ORDERING as decimal(38,0),",
				"          TITLE as string,",
				"          REGION as string,",
				"          LANGUAGE as string,",
				"          TYPES as string,",
				"          ATTRIBUTES as string,",
				"          ISORIGINALTITLE as boolean,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> titleakas",
				"titleakas, dimtitle join(TITLEID == TCONST,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3, dimregion join(REGION == COUNTRY_CODE,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join4",
				"join5 select(mapColumn(",
				"          ORDERING,",
				"          TITLE_SK,",
				"          ORIGINAL_TITLE,",
				"          REGION_SK,",
				"          LANGUAGE_SK",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"join4, dimlanguage join(LANGUAGE == LANGUAGE_CODE,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join5",
				"select3 derive(DI_JOB_ID = $DI_JOB_ID,",
				"          DI_LOAD_DATE = $di_load_date) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkBridgelangRegtitle"
			]
		}
	}
}